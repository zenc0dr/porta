#!/bin/bash

PORT=8111
UVICORN_PID_FILE="porta.pid"
NGROK_PID_FILE="ngrok.pid"
NGROK_URL_FILE="ngrok.url"

start_server() {
    echo "üöÄ –ó–∞–ø—É—Å–∫ Porta MCP –Ω–∞ –ø–æ—Ä—Ç—É $PORT..."
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    export PORTA_TOKEN="test123"
    echo "üîê –¢–æ–∫–µ–Ω –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $PORTA_TOKEN"
    
    nohup uvicorn porta:app --host 0.0.0.0 --port $PORT > porta.log 2>&1 &
    echo $! > "$UVICORN_PID_FILE"
    sleep 2

    echo "üåê –ó–∞–ø—É—Å–∫ ngrok..."
    nohup ngrok http $PORT > ngrok.log 2>&1 &
    echo $! > "$NGROK_PID_FILE"

    sleep 3

    NGROK_PUBLIC_URL=$(curl -s http://127.0.0.1:4040/api/tunnels | grep -o 'https://[0-9a-zA-Z.-]*\.ngrok-free\.app' | head -n1)
    if [ -n "$NGROK_PUBLIC_URL" ]; then
        echo "$NGROK_PUBLIC_URL" > "$NGROK_URL_FILE"
        echo "‚úÖ MCP –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: $NGROK_PUBLIC_URL"
        echo "üí° –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –ø–æ—Å–µ—â–µ–Ω–∏–∏ –º–æ–∂–µ—Ç –ø–æ—è–≤–∏—Ç—å—Å—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ ngrok"
        echo "   –ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ 'Visit Site' –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è"
    else
        echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å URL –æ—Ç ngrok. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –µ—â—ë –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è."
    fi
}

stop_server() {
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Porta –∏ ngrok..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ uvicorn
    if [ -f "$UVICORN_PID_FILE" ]; then
        PID=$(cat "$UVICORN_PID_FILE")
        if ps -p $PID > /dev/null 2>&1; then
            kill -9 $PID 2>/dev/null
            echo "‚úÖ Porta –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (PID $PID)"
        else
            echo "‚ö†Ô∏è Porta —É–∂–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        fi
        rm -f "$UVICORN_PID_FILE"
    else
        # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø—Ä–æ—Ü–µ—Å—Å –ø–æ –∏–º–µ–Ω–∏
        PIDS=$(pgrep -f "uvicorn porta:app")
        if [ -n "$PIDS" ]; then
            echo $PIDS | xargs kill -9 2>/dev/null
            echo "‚úÖ Porta –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–Ω–∞–π–¥–µ–Ω –ø–æ –∏–º–µ–Ω–∏)"
        fi
    fi
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ ngrok
    if [ -f "$NGROK_PID_FILE" ]; then
        PID=$(cat "$NGROK_PID_FILE")
        if ps -p $PID > /dev/null 2>&1; then
            kill -9 $PID 2>/dev/null
            echo "‚úÖ ngrok –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (PID $PID)"
        else
            echo "‚ö†Ô∏è ngrok —É–∂–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        fi
        rm -f "$NGROK_PID_FILE"
    else
        # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø—Ä–æ—Ü–µ—Å—Å –ø–æ –∏–º–µ–Ω–∏
        PIDS=$(pgrep -f "ngrok http 8111")
        if [ -n "$PIDS" ]; then
            echo $PIDS | xargs kill -9 2>/dev/null
            echo "‚úÖ ngrok –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–Ω–∞–π–¥–µ–Ω –ø–æ –∏–º–µ–Ω–∏)"
        fi
    fi
    
    rm -f "$NGROK_URL_FILE"
    echo "üßπ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—á–∏—â–µ–Ω—ã"
}

status_server() {
    echo "üìä –°—Ç–∞—Ç—É—Å Porta MCP:"
    if [ -f "$UVICORN_PID_FILE" ] && ps -p $(cat "$UVICORN_PID_FILE") > /dev/null; then
        echo "üü¢ Porta —Ä–∞–±–æ—Ç–∞–µ—Ç (PID $(cat "$UVICORN_PID_FILE"))"
    else
        echo "üî¥ Porta –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    fi

    if [ -f "$NGROK_PID_FILE" ] && ps -p $(cat "$NGROK_PID_FILE") > /dev/null; then
        echo "üü¢ ngrok —Ä–∞–±–æ—Ç–∞–µ—Ç (PID $(cat "$NGROK_PID_FILE"))"
        [ -f "$NGROK_URL_FILE" ] && echo "üåç –ü—É–±–ª–∏—á–Ω—ã–π –∞–¥—Ä–µ—Å: $(cat "$NGROK_URL_FILE")"
    else
        echo "üî¥ ngrok –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    fi
}

test_url() {
    if [ -f "$NGROK_URL_FILE" ]; then
        URL=$(cat "$NGROK_URL_FILE")
        echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ URL: $URL"
        echo "üìã –†–µ–∑—É–ª—å—Ç–∞—Ç (—Å –ø—Ä–æ–ø—É—Å–∫–æ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è ngrok):"
        curl -H "ngrok-skip-browser-warning: true" -s "$URL" | head -c 200
        echo -e "\n..."
    else
        echo "‚ùå URL –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä —Å–Ω–∞—á–∞–ª–∞."
    fi
}

case "$1" in
    start)
        start_server
        ;;
    stop)
        stop_server
        ;;
    restart)
        stop_server
        sleep 1
        start_server
        ;;
    status)
        status_server
        ;;
    test)
        test_url
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {start|stop|restart|status|test}"
        exit 1
esac
