#!/usr/bin/env python3
import subprocess
import json
import datetime
import os
import statistics
import re

# === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ===
RPS = int(os.getenv("RPS", 5))               # –ó–∞–ø—Ä–æ—Å–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É
DURATION = int(os.getenv("DURATION", 60))    # –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
LOG_DIR = "./logs/daily_metrics"

# === –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ ===
now = datetime.datetime.now()
timestamp = now.strftime("%Y-%m-%dT%H:%M:%S")
filename = f"{LOG_DIR}/{now.strftime('%Y-%m-%d')}.json"
os.makedirs(LOG_DIR, exist_ok=True)

# === –ó–∞–ø—É—Å–∫ stress-—Ç–µ—Å—Ç–∞ ===
print(f"üìä –ó–∞–ø—É—Å–∫ stress-—Ç–µ—Å—Ç–∞: {RPS} RPS –Ω–∞ {DURATION} —Å–µ–∫—É–Ω–¥...")
result = subprocess.run(
    ["python3", "scripts/stress_test.py"],
    capture_output=True,
    text=True,
    env={**os.environ, "RPS": str(RPS), "DURATION": str(DURATION)}
)

# === –ü–∞—Ä—Å–∏–Ω–≥ –≤—ã–≤–æ–¥–∞ ===
pattern = r"\[(.*?)\]\s+(\d{3})\s+-\s+(\d+)ms"
matches = re.findall(pattern, result.stdout)
latencies = [int(ms) for _, status, ms in matches if status == "200"]

# === –†–∞—Å—á—ë—Ç—ã ===
summary = {
    "timestamp": timestamp,
    "rps": RPS,
    "duration_sec": DURATION,
    "requests_sent": len(matches),
    "successful": len(latencies),
    "errors": len(matches) - len(latencies),
    "avg_latency_ms": round(statistics.mean(latencies), 2) if latencies else None,
    "p95_latency_ms": round(statistics.quantiles(latencies, n=100)[94]) if len(latencies) >= 20 else None,
    "p99_latency_ms": round(statistics.quantiles(latencies, n=100)[98]) if len(latencies) >= 20 else None,
    "cv_latency": round(statistics.stdev(latencies) / statistics.mean(latencies) * 100, 2) if len(latencies) >= 2 else None,
    "raw_output": result.stdout.strip(),
    "returncode": result.returncode
}

# === –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á—ë—Ç ===
with open(filename, "w") as f:
    json.dump(summary, f, indent=2)

print(f"‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.\nüìÅ –û—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤: {filename}")
if summary["cv_latency"]:
    print(f"üìà CV (–∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –≤–∞—Ä–∏–∞—Ü–∏–∏): {summary['cv_latency']}%")
